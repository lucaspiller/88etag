define(function(require, exports, module){
// Generated by CoffeeScript 1.3.1
var HealthBall;

HealthBall = (function() {

  HealthBall.name = 'HealthBall';

  function HealthBall(options) {
    this.controller = options.controller;
    this.position = options.position;
    this.maxHealth = options.maxHealth;
    this.radius = options.radius;
    this.buildMeshes();
  }

  HealthBall.prototype.buildMeshes = function() {
    var geometry, material;
    geometry = new THREE.CylinderGeometry(this.radius, this.radius, 0.1, 16);
    material = new THREE.MeshBasicMaterial();
    material.color.setRGB(0, 25 / 255, 0);
    material.opacity = 0.3;
    this.outerMesh = new THREE.Mesh(geometry, material);
    this.outerMesh.rotateAboutWorldAxis(THREE.AxisX, Math.PI / 2);
    this.controller.scene.add(this.outerMesh);
    geometry = new THREE.CylinderGeometry(this.radius, this.radius, 0.1, 16);
    material = new THREE.MeshBasicMaterial();
    material.color.setRGB(0, 68 / 255, 0);
    material.opacity = 0.8;
    this.innerMesh = new THREE.Mesh(geometry, material);
    this.innerMesh.rotateAboutWorldAxis(THREE.AxisX, Math.PI / 2);
    return this.controller.scene.add(this.innerMesh);
  };

  HealthBall.prototype.remove = function() {
    this.controller.scene.remove(this.innerMesh);
    return this.controller.scene.remove(this.outerMesh);
  };

  HealthBall.prototype.update = function(position, health) {
    this.outerMesh.position.set(position.x, position.y, position.z - 0.2);
    this.innerMesh.position.set(position.x, position.y, position.z - 0.1);
    return this.innerMesh.scale.set(health / this.maxHealth, health / this.maxHealth, health / this.maxHealth);
  };

  return HealthBall;

})();

module.exports = HealthBall;

});
